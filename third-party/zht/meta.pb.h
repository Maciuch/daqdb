// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

#ifndef PROTOBUF_INCLUDED_meta_2eproto
#define PROTOBUF_INCLUDED_meta_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_meta_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_meta_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_meta_2eproto();
class Package;
class PackageDefaultTypeInternal;
extern PackageDefaultTypeInternal _Package_default_instance_;
namespace google {
namespace protobuf {
template<> ::Package* Arena::CreateMaybeMessage<::Package>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Package : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Package) */ {
 public:
  Package();
  virtual ~Package();

  Package(const Package& from);

  inline Package& operator=(const Package& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Package(Package&& from) noexcept
    : Package() {
    *this = ::std::move(from);
  }

  inline Package& operator=(Package&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Package& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Package* internal_default_instance() {
    return reinterpret_cast<const Package*>(
               &_Package_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Package* other);
  friend void swap(Package& a, Package& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Package* New() const final {
    return CreateMaybeMessage<Package>(NULL);
  }

  Package* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Package>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Package& from);
  void MergeFrom(const Package& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Package* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string listItem = 5;
  int listitem_size() const;
  void clear_listitem();
  static const int kListItemFieldNumber = 5;
  const ::std::string& listitem(int index) const;
  ::std::string* mutable_listitem(int index);
  void set_listitem(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_listitem(int index, ::std::string&& value);
  #endif
  void set_listitem(int index, const char* value);
  void set_listitem(int index, const char* value, size_t size);
  ::std::string* add_listitem();
  void add_listitem(const ::std::string& value);
  #if LANG_CXX11
  void add_listitem(::std::string&& value);
  #endif
  void add_listitem(const char* value);
  void add_listitem(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& listitem() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_listitem();

  // optional string virtualPath = 1;
  bool has_virtualpath() const;
  void clear_virtualpath();
  static const int kVirtualPathFieldNumber = 1;
  const ::std::string& virtualpath() const;
  void set_virtualpath(const ::std::string& value);
  #if LANG_CXX11
  void set_virtualpath(::std::string&& value);
  #endif
  void set_virtualpath(const char* value);
  void set_virtualpath(const char* value, size_t size);
  ::std::string* mutable_virtualpath();
  ::std::string* release_virtualpath();
  void set_allocated_virtualpath(::std::string* virtualpath);

  // optional string realFullPath = 2;
  bool has_realfullpath() const;
  void clear_realfullpath();
  static const int kRealFullPathFieldNumber = 2;
  const ::std::string& realfullpath() const;
  void set_realfullpath(const ::std::string& value);
  #if LANG_CXX11
  void set_realfullpath(::std::string&& value);
  #endif
  void set_realfullpath(const char* value);
  void set_realfullpath(const char* value, size_t size);
  ::std::string* mutable_realfullpath();
  ::std::string* release_realfullpath();
  void set_allocated_realfullpath(::std::string* realfullpath);

  // optional bool isDir = 3;
  bool has_isdir() const;
  void clear_isdir();
  static const int kIsDirFieldNumber = 3;
  bool isdir() const;
  void set_isdir(bool value);

  // optional int32 replicanum = 4;
  bool has_replicanum() const;
  void clear_replicanum();
  static const int kReplicanumFieldNumber = 4;
  ::google::protobuf::int32 replicanum() const;
  void set_replicanum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Package)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> listitem_;
  ::google::protobuf::internal::ArenaStringPtr virtualpath_;
  ::google::protobuf::internal::ArenaStringPtr realfullpath_;
  bool isdir_;
  ::google::protobuf::int32 replicanum_;
  friend struct ::TableStruct_meta_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Package

// optional string virtualPath = 1;
inline bool Package::has_virtualpath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Package::clear_virtualpath() {
  virtualpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Package::virtualpath() const {
  // @@protoc_insertion_point(field_get:Package.virtualPath)
  return virtualpath_.GetNoArena();
}
inline void Package::set_virtualpath(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  virtualpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Package.virtualPath)
}
#if LANG_CXX11
inline void Package::set_virtualpath(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  virtualpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Package.virtualPath)
}
#endif
inline void Package::set_virtualpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  virtualpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Package.virtualPath)
}
inline void Package::set_virtualpath(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  virtualpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Package.virtualPath)
}
inline ::std::string* Package::mutable_virtualpath() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:Package.virtualPath)
  return virtualpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Package::release_virtualpath() {
  // @@protoc_insertion_point(field_release:Package.virtualPath)
  if (!has_virtualpath()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return virtualpath_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_allocated_virtualpath(::std::string* virtualpath) {
  if (virtualpath != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  virtualpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), virtualpath);
  // @@protoc_insertion_point(field_set_allocated:Package.virtualPath)
}

// optional string realFullPath = 2;
inline bool Package::has_realfullpath() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Package::clear_realfullpath() {
  realfullpath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Package::realfullpath() const {
  // @@protoc_insertion_point(field_get:Package.realFullPath)
  return realfullpath_.GetNoArena();
}
inline void Package::set_realfullpath(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  realfullpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Package.realFullPath)
}
#if LANG_CXX11
inline void Package::set_realfullpath(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  realfullpath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Package.realFullPath)
}
#endif
inline void Package::set_realfullpath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000002u;
  realfullpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Package.realFullPath)
}
inline void Package::set_realfullpath(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  realfullpath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Package.realFullPath)
}
inline ::std::string* Package::mutable_realfullpath() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:Package.realFullPath)
  return realfullpath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Package::release_realfullpath() {
  // @@protoc_insertion_point(field_release:Package.realFullPath)
  if (!has_realfullpath()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000002u;
  return realfullpath_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Package::set_allocated_realfullpath(::std::string* realfullpath) {
  if (realfullpath != NULL) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  realfullpath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realfullpath);
  // @@protoc_insertion_point(field_set_allocated:Package.realFullPath)
}

// optional bool isDir = 3;
inline bool Package::has_isdir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Package::clear_isdir() {
  isdir_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool Package::isdir() const {
  // @@protoc_insertion_point(field_get:Package.isDir)
  return isdir_;
}
inline void Package::set_isdir(bool value) {
  _has_bits_[0] |= 0x00000004u;
  isdir_ = value;
  // @@protoc_insertion_point(field_set:Package.isDir)
}

// optional int32 replicanum = 4;
inline bool Package::has_replicanum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Package::clear_replicanum() {
  replicanum_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 Package::replicanum() const {
  // @@protoc_insertion_point(field_get:Package.replicanum)
  return replicanum_;
}
inline void Package::set_replicanum(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  replicanum_ = value;
  // @@protoc_insertion_point(field_set:Package.replicanum)
}

// repeated string listItem = 5;
inline int Package::listitem_size() const {
  return listitem_.size();
}
inline void Package::clear_listitem() {
  listitem_.Clear();
}
inline const ::std::string& Package::listitem(int index) const {
  // @@protoc_insertion_point(field_get:Package.listItem)
  return listitem_.Get(index);
}
inline ::std::string* Package::mutable_listitem(int index) {
  // @@protoc_insertion_point(field_mutable:Package.listItem)
  return listitem_.Mutable(index);
}
inline void Package::set_listitem(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Package.listItem)
  listitem_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Package::set_listitem(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Package.listItem)
  listitem_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Package::set_listitem(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  listitem_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Package.listItem)
}
inline void Package::set_listitem(int index, const char* value, size_t size) {
  listitem_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Package.listItem)
}
inline ::std::string* Package::add_listitem() {
  // @@protoc_insertion_point(field_add_mutable:Package.listItem)
  return listitem_.Add();
}
inline void Package::add_listitem(const ::std::string& value) {
  listitem_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Package.listItem)
}
#if LANG_CXX11
inline void Package::add_listitem(::std::string&& value) {
  listitem_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Package.listItem)
}
#endif
inline void Package::add_listitem(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  listitem_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Package.listItem)
}
inline void Package::add_listitem(const char* value, size_t size) {
  listitem_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Package.listItem)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Package::listitem() const {
  // @@protoc_insertion_point(field_list:Package.listItem)
  return listitem_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Package::mutable_listitem() {
  // @@protoc_insertion_point(field_mutable_list:Package.listItem)
  return &listitem_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_meta_2eproto
