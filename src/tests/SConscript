Import('env')

buildDragonTestTarget = env.Program('dragonTest',
            source = [Glob('*.cpp'),
                Glob('dht/*.cpp'),
                Glob('fabric/*.cpp'),
                Glob('store/*.cpp')
            ], 
            LIBS=["pthread",
                "rt",
                "dht",
                "fabricpp",
                "fabric",
                File("#third-party/cChord/libmymed.a"),
                "boost_unit_test_framework",
                "dl",
                "boost_program_options",
                "boost_system",
                "boost_filesystem",
                File("#third-party/pmemkv/bin/libpmemkv.so")
                ])

copyDragonTestTarget = Command(target = "#/dragonTest",
        source = buildDragonTestTarget,
        action = Copy("$TARGET", "$SOURCE"))
env.Depends(copyDragonTestTarget, buildDragonTestTarget)
env.Clean('#/dragonTest', 'dragonTest')

logging_option = ' --color_output=yes'
if env["VERBOSE"]:
	logging_option += ' --log_level=all'

test_alias = Alias('test', [buildDragonTestTarget], buildDragonTestTarget[0].path + logging_option)

AlwaysBuild(test_alias)
